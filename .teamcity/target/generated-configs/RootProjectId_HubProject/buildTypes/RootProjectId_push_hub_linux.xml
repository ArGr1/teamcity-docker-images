<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>[Linux] [Production] Release TeamCity Docker Images into Production Registry</name>
  <description>Moves TeamCity Linux-based staging images into production registry.</description>
  <settings>
    <options>
      <option name="buildNumberPattern" value="%dockerImage.teamcity.buildNumber%-%build.counter%" />
    </options>
    <parameters>
      <param name="dockerImage.platform" value="linux" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Pull image [teamcity-minimal-agent:%tc.image.version%-linux] for further re-tagging" type="DockerCommand">
        <parameters>
          <param name="command.args" value="%docker.buildRepository%teamcity-minimal-agent%docker.buildImagePostfix%:%tc.image.version%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="pull" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Re-tag image [teamcity-minimal-agent:%tc.image.version%-linux] for publishing into [%docker.deployRepository%teamcity-minimal-agent:%tc.image.version%-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="%docker.buildRepository%teamcity-minimal-agent%docker.buildImagePostfix%:%tc.image.version%-linux %docker.deployRepository%teamcity-minimal-agent:%tc.image.version%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="tag" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Publish [%docker.deployRepository%teamcity-minimal-agent:%tc.image.version%-linux] after re-tag" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="%docker.deployRepository%teamcity-minimal-agent:%tc.image.version%-linux" />
          <param name="docker.push.remove.image" value="" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="Pull image [teamcity-agent:%tc.image.version%-linux] for further re-tagging" type="DockerCommand">
        <parameters>
          <param name="command.args" value="%docker.buildRepository%teamcity-agent%docker.buildImagePostfix%:%tc.image.version%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="pull" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_5" name="Re-tag image [teamcity-agent:%tc.image.version%-linux] for publishing into [%docker.deployRepository%teamcity-agent:%tc.image.version%-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="%docker.buildRepository%teamcity-agent%docker.buildImagePostfix%:%tc.image.version%-linux %docker.deployRepository%teamcity-agent:%tc.image.version%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="tag" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_6" name="Publish [%docker.deployRepository%teamcity-agent:%tc.image.version%-linux] after re-tag" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="%docker.deployRepository%teamcity-agent:%tc.image.version%-linux" />
          <param name="docker.push.remove.image" value="" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_7" name="Pull image [teamcity-agent:%tc.image.version%-linux-amd64-sudo] for further re-tagging" type="DockerCommand">
        <parameters>
          <param name="command.args" value="%docker.buildRepository%teamcity-agent%docker.buildImagePostfix%:%tc.image.version%-linux-amd64-sudo" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="pull" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_8" name="Re-tag image [teamcity-agent:%tc.image.version%-linux-amd64-sudo] for publishing into [%docker.deployRepository%teamcity-agent:%tc.image.version%-linux-amd64-sudo]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="%docker.buildRepository%teamcity-agent%docker.buildImagePostfix%:%tc.image.version%-linux-amd64-sudo %docker.deployRepository%teamcity-agent:%tc.image.version%-linux-amd64-sudo" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="tag" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_9" name="Publish [%docker.deployRepository%teamcity-agent:%tc.image.version%-linux-amd64-sudo] after re-tag" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="%docker.deployRepository%teamcity-agent:%tc.image.version%-linux-amd64-sudo" />
          <param name="docker.push.remove.image" value="" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_10" name="Pull image [teamcity-server:%tc.image.version%-linux] for further re-tagging" type="DockerCommand">
        <parameters>
          <param name="command.args" value="%docker.buildRepository%teamcity-server%docker.buildImagePostfix%:%tc.image.version%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="pull" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_11" name="Re-tag image [teamcity-server:%tc.image.version%-linux] for publishing into [%docker.deployRepository%teamcity-server:%tc.image.version%-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="%docker.buildRepository%teamcity-server%docker.buildImagePostfix%:%tc.image.version%-linux %docker.deployRepository%teamcity-server:%tc.image.version%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="tag" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_12" name="Publish [%docker.deployRepository%teamcity-server:%tc.image.version%-linux] after re-tag" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="%docker.deployRepository%teamcity-server:%tc.image.version%-linux" />
          <param name="docker.push.remove.image" value="" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings />
    <requirements>
      <contains id="RQ_1" name="docker.server.osType" value="linux" />
      <does-not-contain id="RQ_2" name="teamcity.agent.name" value="arm" />
    </requirements>
    <build-triggers />
    <build-extensions>
      <extension id="BUILD_EXT_1" type="jetbrains.agent.free.space">
        <parameters>
          <param name="free-space-fail-start" value="true" />
          <param name="free-space-work" value="4gb" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_2" type="DockerSupport">
        <parameters>
          <param name="cleanupPushed" value="" />
          <param name="login2registry" value="PROJECT_EXT_315,PROJECT_EXT_774" />
          <param name="loginCheckbox" value="on" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_3" type="swabra">
        <parameters>
          <param name="swabra.strict" value="true" />
        </parameters>
      </extension>
    </build-extensions>
    <dependencies>
      <depend-on sourceBuildTypeId="RootProjectId_publish_local">
        <options>
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

