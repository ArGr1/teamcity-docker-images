<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>[amd64] TeamCity Docker Images - Automated Scheduled Build - Linux</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="+:*.yml" />
    </options>
    <parameters>
      <param name="docker.buildImagePostfix" value="" />
      <param name="docker.buildRepository" value="%docker.nightlyRepository%" />
      <param name="tc.image.version" value="%dockerImage.teamcity.buildNumber%" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="Set build context for [teamcity-minimal-agent:%dockerImage.teamcity.buildNumber%-linux]" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[echo 2> context/.dockerignore
echo TeamCity/webapps >> context/.dockerignore
echo TeamCity/devPackage >> context/.dockerignore
echo TeamCity/lib >> context/.dockerignore]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Build [teamcity-minimal-agent:%dockerImage.teamcity.buildNumber%-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="--no-cache" />
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="teamcity-minimal-agent:EAP-linux" />
          <param name="dockerfile.contextDir" value="context" />
          <param name="dockerfile.path" value="context/generated/linux/MinimalAgent/Ubuntu/20.04/Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Tag image for staging [teamcity-minimal-agent:EAP-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="teamcity-minimal-agent:EAP-linux %docker.nightlyRepository%teamcity-minimal-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="tag" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="Set build context for [teamcity-agent:%dockerImage.teamcity.buildNumber%-linux]" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[echo 2> context/.dockerignore
echo TeamCity >> context/.dockerignore]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_5" name="Build [teamcity-agent:%dockerImage.teamcity.buildNumber%-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="--no-cache" />
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="teamcity-agent:EAP-linux" />
          <param name="dockerfile.contextDir" value="context" />
          <param name="dockerfile.path" value="context/generated/linux/Agent/Ubuntu/20.04/Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_6" name="Tag image for staging [teamcity-agent:EAP-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="teamcity-agent:EAP-linux %docker.nightlyRepository%teamcity-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="tag" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_7" name="Set build context for [teamcity-agent:%dockerImage.teamcity.buildNumber%-linux-amd64-sudo]" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[echo 2> context/.dockerignore
echo TeamCity >> context/.dockerignore]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_8" name="Build [teamcity-agent:%dockerImage.teamcity.buildNumber%-linux-amd64-sudo]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="--no-cache" />
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="teamcity-agent:EAP-linux-amd64-sudo" />
          <param name="dockerfile.contextDir" value="context" />
          <param name="dockerfile.path" value="context/generated/linux/Agent/Ubuntu/20.04-sudo/Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_9" name="Tag image for staging [teamcity-agent:EAP-linux-amd64-sudo]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="teamcity-agent:EAP-linux-amd64-sudo %docker.nightlyRepository%teamcity-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux-amd64-sudo" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="tag" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_10" name="Set build context for [teamcity-server:%dockerImage.teamcity.buildNumber%-linux]" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[echo 2> context/.dockerignore
echo TeamCity/buildAgent >> context/.dockerignore
echo TeamCity/temp >> context/.dockerignore]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_11" name="Build [teamcity-server:%dockerImage.teamcity.buildNumber%-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="--no-cache" />
          <param name="docker.command.type" value="build" />
          <param name="docker.image.namesAndTags" value="teamcity-server:EAP-linux" />
          <param name="dockerfile.contextDir" value="context" />
          <param name="dockerfile.path" value="context/generated/linux/Server/Ubuntu/20.04/Dockerfile" />
          <param name="dockerfile.source" value="PATH" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_12" name="Tag image for staging [teamcity-server:EAP-linux]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="teamcity-server:EAP-linux %docker.nightlyRepository%teamcity-server%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="tag" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_13" name="Push image to registry - [%docker.nightlyRepository%teamcity-minimal-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux]" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="%docker.nightlyRepository%teamcity-minimal-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux" />
          <param name="docker.push.remove.image" value="" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_14" name="Push image to registry - [%docker.nightlyRepository%teamcity-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux]" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="%docker.nightlyRepository%teamcity-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux" />
          <param name="docker.push.remove.image" value="" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_15" name="Push image to registry - [%docker.nightlyRepository%teamcity-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux-amd64-sudo]" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="%docker.nightlyRepository%teamcity-agent%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux-amd64-sudo" />
          <param name="docker.push.remove.image" value="" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_16" name="Push image to registry - [%docker.nightlyRepository%teamcity-server%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux]" type="DockerCommand">
        <parameters>
          <param name="docker.command.type" value="push" />
          <param name="docker.image.namesAndTags" value="%docker.nightlyRepository%teamcity-server%docker.buildImagePostfix%:%dockerImage.teamcity.buildNumber%-linux" />
          <param name="docker.push.remove.image" value="" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_17" name="Generate Sample docker-compose manifest for the created images" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[cat <<EOF > teamcity-linux-%tc.image.version%.docker-compose.amd64.yml

version: "3.3"
services:
  linux-server:

    image: %docker.nightlyRepository%teamcity-server:%tc.image.version%-linux
    platform: linux/amd64
    
    privileged: true
    user: root

    environment:
      - TEAMCITY_SERVER_OPTS="-Dteamcity.startup.maintenance=false -Dteamcity.csrf.origin.check.enabled=logOnly"
      - TEAMCITY_SERVER_MEM_OPTS="-Xmx2048m"
    ports:
      - "8111:8111"
      
    volumes:
      - ./docker-images-test/data/server:/data/teamcity_server/datadir
      - ./docker-images-test/logs/server:/opt/teamcity/logs
      - ./docker-images-test/temp/server:/opt/teamcity/temp

    healthcheck:
      test: grep "TeamCity initialized" /opt/teamcity/logs/teamcity-server.log || exit 1
      interval: 1m
      timeout: 15m
      retries: 16


  linux-agent:
    image: %docker.nightlyRepository%teamcity-agent:%tc.image.version%-linux
    platform: linux/amd64
   
    depends_on:
      - linux-server

    privileged: true
    user: root

    environment:
      - SERVER_URL=http://linux-server:8111
      - AGENT_NAME=tc-agent-linux-regular
      - TEAMCITY_AGENT_EC2_DISABLE=true
    volumes:
      - ./docker-images-test/data/agent:/data/teamcity_agent/conf
      - ./docker-images-test/logs/agent:/opt/buildagent/logs
      - ./docker-images-test/temp/agent:/opt/buildagent/temp

    healthcheck:
      # Plugin initialization should be completed at this point
      test: grep "Build Agent version" /opt/buildagent/logs/teamcity-agent.log || exit 1
      interval: 1m
      timeout: 15m
      retries: 16

  linux-minimal-agent:
    image: %docker.nightlyRepository%teamcity-minimal-agent:%tc.image.version%-linux
    platform: linux/amd64

    privileged: true
    user: root

    depends_on:
      - linux-server

    deploy:
      resources:
        limits:
          memory: 2000m
        reservations:
          memory: 2000m
    environment:
      - SERVER_URL=http://linux-server:8111
      - AGENT_NAME=tc-agent-linux-minimal
      - TEAMCITY_AGENT_EC2_DISABLE=true

    volumes:
      - ./docker-images-test/data/min-agent:/data/teamcity_agent/conf
      - ./docker-images-test/logs/min-agent:/opt/buildagent/logs
      - ./docker-images-test/temp/min-agent:/opt/buildagent/temp

    healthcheck:
      # Plugin initialization should be completed at this point
      test: grep "Build Agent version" /opt/buildagent/logs/teamcity-agent.log || exit 1
      interval: 1m
      timeout: 15m
      retries: 16

EOF]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="RootProjectId_TeamCityDockerImagesRepo_AllBranches" />
    </vcs-settings>
    <requirements>
      <contains id="RQ_1" name="teamcity.agent.name" value="linux" />
    </requirements>
    <build-triggers />
    <build-extensions>
      <extension id="BUILD_EXT_1" type="jetbrains.agent.free.space">
        <parameters>
          <param name="free-space-fail-start" value="true" />
          <param name="free-space-work" value="8gb" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_2" type="DockerSupport">
        <parameters>
          <param name="cleanupPushed" value="" />
          <param name="login2registry" value="PROJECT_EXT_315" />
          <param name="loginCheckbox" value="on" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_3" type="swabra">
        <parameters>
          <param name="swabra.strict" value="true" />
        </parameters>
      </extension>
      <extension id="TC_DOCKER_IMAGES_SCHEDULED_CLEANUP" type="keepRules">
        <parameters>
          <param name="keepData.2.type" value="everything" />
          <param name="limit.daysCount" value="14" />
          <param name="limit.type" value="lastNDays" />
          <param name="partitions.1.type" value="perBranch" />
          <param name="preserveArtifacts" value="true" />
          <param name="ruleDisabled" value="false" />
        </parameters>
      </extension>
    </build-extensions>
    <artifact-dependencies>
      <dependency id="ARTIFACT_DEPENDENCY_1" sourceBuildTypeId="TC_Trunk_BuildDistDocker" cleanDestination="false">
        <revisionRule name="sameChainOrLastFinished" revision="latest.sameChainOrLastFinished" />
        <artifact sourcePath="TeamCity.zip!/**=&gt;context/TeamCity" />
      </dependency>
    </artifact-dependencies>
    <dependencies>
      <depend-on sourceBuildTypeId="TC_Trunk_BuildDistDocker">
        <options>
          <option name="run-build-if-dependency-failed" value="RUN" />
          <option name="take-started-build-with-same-revisions" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

