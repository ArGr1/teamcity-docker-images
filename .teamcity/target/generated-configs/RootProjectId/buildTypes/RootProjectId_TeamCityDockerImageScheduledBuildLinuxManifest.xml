<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>[Linux] TeamCity Docker Images - Automated Scheduled Build - Linux - publish manifest</name>
  <description>Creates and publishes manifest for image built for different architectures: AMD, ARM.</description>
  <settings>
    <parameters>
      <param name="docker.buildImagePostfix" value="" />
      <param name="docker.buildRepository" value="%docker.nightlyRepository%" />
      <param name="tc.image.version" value="%dockerImage.teamcity.buildNumber%" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="remove manifests" type="simpleRunner">
        <parameters>
          <param name="script.content" value="if exist &quot;%%USERPROFILE%%\.docker\manifests\&quot; rmdir &quot;%%USERPROFILE%%\.docker\manifests\&quot; /s /q" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="Create manifest for [%docker.nightlyRepository%teamcity-server]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="create %docker.nightlyRepository%teamcity-server:%dockerImage.teamcity.buildNumber%  %docker.nightlyRepository%teamcity-server:%dockerImage.teamcity.buildNumber%-linux %docker.nightlyRepository%teamcity-server:%dockerImage.teamcity.buildNumber%-nanoserver-1809 %docker.nightlyRepository%teamcity-server:%dockerImage.teamcity.buildNumber%-nanoserver-2004 %docker.nightlyRepository%teamcity-server:%dockerImage.teamcity.buildNumber%-linux-arm64" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Push manifest for [%docker.nightlyRepository%teamcity-server]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="push %docker.nightlyRepository%teamcity-server:%dockerImage.teamcity.buildNumber%" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_4" name="Print-out manifest for [%docker.nightlyRepository%teamcity-server]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="inspect %docker.nightlyRepository%teamcity-server:%dockerImage.teamcity.buildNumber% --verbose" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_5" name="Create manifest for [%docker.nightlyRepository%teamcity-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="create %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%  %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-linux %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-nanoserver-1809 %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-nanoserver-2004  %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-linux-arm64" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_6" name="Push manifest for [%docker.nightlyRepository%teamcity-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="push %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_7" name="Print-out manifest for [%docker.nightlyRepository%teamcity-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="inspect %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber% --verbose" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_8" name="Create manifest for [%docker.nightlyRepository%teamcity-minimal-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="create %docker.nightlyRepository%teamcity-minimal-agent:%dockerImage.teamcity.buildNumber%  %docker.nightlyRepository%teamcity-minimal-agent:%dockerImage.teamcity.buildNumber%-linux %docker.nightlyRepository%teamcity-minimal-agent:%dockerImage.teamcity.buildNumber%-nanoserver-1809 %docker.nightlyRepository%teamcity-minimal-agent:%dockerImage.teamcity.buildNumber%-nanoserver-2004  %docker.nightlyRepository%teamcity-minimal-agent:%dockerImage.teamcity.buildNumber%-linux-arm64" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_9" name="Push manifest for [%docker.nightlyRepository%teamcity-minimal-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="push %docker.nightlyRepository%teamcity-minimal-agent:%dockerImage.teamcity.buildNumber%" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_10" name="Print-out manifest for [%docker.nightlyRepository%teamcity-minimal-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="inspect %docker.nightlyRepository%teamcity-minimal-agent:%dockerImage.teamcity.buildNumber% --verbose" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_11" name="Create manifest for [%docker.nightlyRepository%teamcity-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="create %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-linux-sudo  %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-linux-arm64-sudo %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-linux-amd64-sudo" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_12" name="Push manifest for [%docker.nightlyRepository%teamcity-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="push %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-linux-sudo" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_13" name="Print-out manifest for [%docker.nightlyRepository%teamcity-agent]" type="DockerCommand">
        <parameters>
          <param name="command.args" value="inspect %docker.nightlyRepository%teamcity-agent:%dockerImage.teamcity.buildNumber%-linux-sudo --verbose" />
          <param name="docker.command.type" value="other" />
          <param name="docker.sub.command" value="manifest" />
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings />
    <requirements />
    <build-triggers />
    <build-extensions>
      <extension id="BUILD_EXT_1" type="jetbrains.agent.free.space">
        <parameters>
          <param name="free-space-fail-start" value="true" />
          <param name="free-space-work" value="1gb" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_2" type="DockerSupport">
        <parameters>
          <param name="cleanupPushed" value="" />
          <param name="login2registry" value="PROJECT_EXT_315,PROJECT_EXT_774" />
          <param name="loginCheckbox" value="on" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_3" type="swabra">
        <parameters>
          <param name="swabra.strict" value="true" />
        </parameters>
      </extension>
    </build-extensions>
    <dependencies>
      <depend-on sourceBuildTypeId="RootProjectId_TeamCityScheduledImageBuildLinux_Baseamd64">
        <options>
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
      <depend-on sourceBuildTypeId="RootProjectId_TeamCityScheduledImageBuildLinux_Baseaarch64">
        <options>
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>

